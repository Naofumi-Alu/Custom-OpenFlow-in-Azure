version: "3.3"
services:
  mongodb:
    image: mongo
    restart: always
    command: "--bind_ip_all --replSet rs0"
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongodb_data:/data/db
  mongosetup:
    image: mongo
    depends_on:
      - mongodb
    restart: "no"
    command: >
      mongosh --host mongodb:27017 --eval 
      '
      db = (new Mongo("mongodb:27017")).getDB("openflow");
      config = {
      "_id" : "rs0",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongodb:27017"
        }
      ]
      };
      rs.initiate(config);
      '
  traefik:
    image: localhost:5000/traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    restart: always
    volumes:
      - "//var/run/docker.sock:/var/run/docker.sock:ro"
  rabbitmq:
    image: localhost:5000/rabbitmq:3-management
    restart: always
  mqtt:
    image: localhost:5000/iegomez/mosquitto-go-auth
    restart: always
    volumes:
      - "./mosquitto.conf:/etc/mosquitto/mosquitto.conf"
    ports:
      - "1883:1883"
  verdaccio:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.verdaccio.rule=Host(`npm.localhost.openiap.io`)"
      - "traefik.http.routers.verdaccio.entrypoints=web"
      - "traefik.http.services.verdaccio.loadbalancer.server.port=4873"
    image: localhost:5000/verdaccio/verdaccio
    restart: always
    volumes:
      - "verdaccio_storage:/verdaccio/storage"
      # - "./offline/verdaccio/config:/verdaccio/conf"
      # - "./offline/verdaccio/plugins:/verdaccio/plugins"
    environment:
      - "VERDACCIO_PORT=4873"
      - "VERDACCIO_PROTOCOL=http"
    ports:
      - "4873:4873"
  api:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost.openiap.io`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.frontend.passHostHeader=true"
    image: localhost:5000/openiap/openflow
    deploy:
      replicas: 1
    pull_policy: always
    restart: always
    volumes:
      - "//var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - rabbitmq
      - mongodb
      - verdaccio
    environment:
      - auto_create_users=true
      - auto_create_domains=
      
      # uncomment below 2 lines, if you have set replicas above 1
      # - enable_openflow_amqp=true
      # - amqp_prefetch=25


      - amqp_url=amqp://guest:guest@rabbitmq
      - mongodb_url=mongodb://mongodb:27017
      - mongodb_db=openrpa

      # - agent_oidc_userinfo_endpoint=http://api:3000/oidc/me
      # - agent_oidc_issuer=http://localhost.openiap.io/oidc
      # - agent_oidc_authorization_endpoint=http://localhost.openiap.io/oidc/auth
      # - agent_oidc_token_endpoint=http://api:3000/oidc/token
      - 'agent_images=[{"name":"Agent", "image":"localhost:5000/openiap/nodeagent", "languages": ["nodejs", "python"]}, {"name":"Agent+Chromium", "image":"localhost:5000/openiap/nodechromiumagent", "chromium": true, "languages": ["nodejs", "python"]}, {"name":"NodeRED", "image":"localhost:5000/openiap/noderedagent", "port": 3000}, {"name":"DotNet 6", "image":"localhost:5000/openiap/dotnetagent", "languages": ["dotnet"]} ]'

      - aes_secret=O1itlrmA47WzxPj95YHD2sZs7IchYaQI25mQ
      - license_key=PT09PUJFR0lOIExJQ0VOU0U9PT09CjIKCjIwMjMtMDUtMjdUMTA6NDQ6NDMuMTI4Wgpsb2NhbGhvc3Qub3BlbmlhcC5pbwpNYk1RQlM2QUxUUndjYzVzU1hCRlZmMHBvMnhJN0xwdFlDNGhTUEpOR0RGSUxxRDlMUXQ4SGRyUC9DMkNvUW1yN2ozTUJmV2ZuMlNqWFNENXgwa3pGWHJVcUlIZWtHK2xFZHhjeGxLZE5MbG5mWU10RlpQUElZbEl5VWJVMENTQW5tWnJSdkhSTk9uejcyMkxlbXV2MU9seFZWclRuT3llYXdNeHFsNndMTlFpTXEvaUszbCtoMHVZUm1jK1pCMm4xYU5oTlZ1ZDlYS0VDa3FtM2g5MUwzdFZ0d05HVDdKbzJqb1FQTTc0bGZkMW52VXZ5RU1VbTFxbXBVeUpieko0UjFtZFF2TTIyT1U3ellVWXM0ZFdCQ2UwMFN5R3dXU1JJR1hjSlBwMG5nUDU3SFFIS2kzT3JjTzg3UUV0SmxnMFhuMTRLUXovOVBRbHFtd0VNd1Bnenc9PQo9PT09PUVORCBMSUNFTlNFPT09PT0=
volumes:
  mongodb_data:
    driver: local
  verdaccio_storage:
    driver: local