[
    {
        "id": "ee0eca6c355d65e1",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "98cbcdab.ea01e",
        "type": "http in",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "url": "/catalogue.json",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "04b439086a1443f3"
            ]
        ]
    },
    {
        "id": "71ce9e13.e83c1",
        "type": "http response",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "9cb99eeb.dcb9f",
        "type": "debug",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 280,
        "wires": []
    },
    {
        "id": "edfc6001.28306",
        "type": "function",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "func": "var dt = new Date();\nmsg.payload = {\n    \"name\":\"OpenFlow  catalogue\",\n    \"updated_at\": dt.toISOString(),\n    \"modules\": [\n        {\n            \"id\": \"node-red-contrib-catalogue\",\n            \"version\": \"0.0.2\",\n            \"description\": \"Generate nodered catalogue\",\n            \"keywords\": [\n                \"node-red\"\n            ],\n            \"updated_at\": dt.toISOString(),\n            \"url\": \"https://www.npmjs.com/package/node-red-contrib-http-request-statusmessage\"\n        },\n        {\n            \"id\": \"node-red-contrib-image-output\",\n            \"version\": \"0.6.3\",\n            \"description\": \"Add statusMessage to http request node\",\n            \"keywords\": [\n                \"node-red\"\n            ],\n            \"updated_at\": dt.toISOString(),\n            \"url\": \"https://www.npmjs.com/package/node-red-contrib-image-output\"\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e2b23928.0d4c68",
        "type": "comment",
        "z": "ee0eca6c355d65e1",
        "name": "Static Nodered Catalogue",
        "info": "",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "e759dee6820ccd53",
        "type": "http in",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "url": "/auth/acl",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 180,
        "wires": [
            [
                "97cecac8f9c5b903",
                "7be08dd9bb7888f4"
            ]
        ]
    },
    {
        "id": "16b964691656c1ac",
        "type": "http in",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "url": "/auth/client",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 140,
        "wires": [
            [
                "97cecac8f9c5b903",
                "7be08dd9bb7888f4"
            ]
        ]
    },
    {
        "id": "97cecac8f9c5b903",
        "type": "debug",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 180,
        "wires": []
    },
    {
        "id": "7be08dd9bb7888f4",
        "type": "http response",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "2565fda0a0cfd898",
        "type": "mqtt in",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "84532dabfc025b3e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 440,
        "wires": [
            [
                "4f72e72982631350"
            ]
        ]
    },
    {
        "id": "b05f53e92c32737d",
        "type": "mqtt out",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "topic": "blahblah",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "84532dabfc025b3e",
        "x": 440,
        "y": 500,
        "wires": []
    },
    {
        "id": "b3a79c8a793ce5d0",
        "type": "inject",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "b05f53e92c32737d"
            ]
        ]
    },
    {
        "id": "4f72e72982631350",
        "type": "debug",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "topic",
        "statusType": "msg",
        "x": 450,
        "y": 440,
        "wires": []
    },
    {
        "id": "7e1673ade07de933",
        "type": "comment",
        "z": "ee0eca6c355d65e1",
        "name": "MQTT broker auth",
        "info": "",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "86a5bafc762b91d7",
        "type": "comment",
        "z": "ee0eca6c355d65e1",
        "name": "Test MQTT broker",
        "info": "",
        "x": 250,
        "y": 380,
        "wires": []
    },
    {
        "id": "dfdfce02364823bf",
        "type": "inject",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "de51c56a896d3638"
            ]
        ]
    },
    {
        "id": "b5eeb31a812f3fa8",
        "type": "comment",
        "z": "ee0eca6c355d65e1",
        "name": "Configure NodeRED",
        "info": "",
        "x": 250,
        "y": 580,
        "wires": []
    },
    {
        "id": "de51c56a896d3638",
        "type": "function",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "func": "var dt = new Date();\nmsg.payload = {\n    \"_id\": \"6368b921ba81c6e80a0907f5\",\n    \"_type\": \"npmrc\",\n    \"_acl\": [\n        {\n            \"rights\": 65535,\n            \"_id\": \"5a1702fa245d9013697656fb\",\n            \"name\": \"admins\"\n        },\n        {\n            \"rights\": 65506,\n            \"_id\": \"5a17f157c4815318c8536c21\",\n            \"name\": \"users\"\n        }\n    ],\n    \"catalogues\": [\n    ],\n    \"content\": \"registry=http://verdaccio:4873\",\n    \"name\": \"npmrc for all\"\n}\nmsg.payload.catalogues.push(\"http://services.localhost.openiap.io/catalogue.json\");\n// msg.payload.catalogues.push(\"https://catalogue.nodered.org/catalogue.json\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 620,
        "wires": [
            [
                "a8adbf5ede48208a"
            ]
        ]
    },
    {
        "id": "a8adbf5ede48208a",
        "type": "api addorupdate",
        "z": "ee0eca6c355d65e1",
        "name": "",
        "writeconcern": "0",
        "journal": "false",
        "entitytype": "",
        "entitytypetype": "str",
        "collection": "nodered",
        "collectiontype": "str",
        "entities": "payload",
        "entitiestype": "msg",
        "uniqeness": "",
        "uniqenesstype": "str",
        "resultfield": "",
        "inputfield": "",
        "x": 560,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "04b439086a1443f3",
        "type": "catalogue catalogue",
        "z": "ee0eca6c355d65e1",
        "registry": "http://verdaccio:4873",
        "registrytype": "str",
        "update": "update",
        "updatetype": "msg",
        "name": "",
        "x": 420,
        "y": 320,
        "wires": [
            [
                "71ce9e13.e83c1",
                "9cb99eeb.dcb9f"
            ]
        ]
    },
    {
        "id": "02554ba493c719e6",
        "type": "inject",
        "z": "ee0eca6c355d65e1",
        "name": "update",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "update",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "04b439086a1443f3"
            ]
        ]
    },
    {
        "id": "84532dabfc025b3e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]